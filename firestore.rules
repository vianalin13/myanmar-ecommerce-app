rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    //returns true if requester is the same user as {uid}
    function isOwnerId(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.role == "admin";
    }

    //users collection: owner can read/create/limited-update, admins can read
    match /users/{uid} {
      allow read: if isOwnerId(uid) || isAdmin();
      allow create: if isOwnerId(uid);
      allow update: if isOwnerId(uid) && 
        request.resource.data.diff(resource.data).changedKeys()
        .hasOnly(["displayName", "language", "updatedAt"]);
      allow delete: if false;
    }

    //default deny: all other collections locked until feature rules added
    match /{document=**} {
      allow read, write: if false;
    }

  }
}